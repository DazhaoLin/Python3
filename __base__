class SuperOne:
    pass

class SuperTwo:
    pass

class Sub(SuperOne, SuperTwo):
    pass


def printBases(cls):
    print('( ', end='')

    for x in cls.__bases__:
        print(x.__name__, end=' ')
    print(')')


printBases(SuperOne)
printBases(SuperTwo)
printBases(Sub)


################ Output ##################
( object )
( object )
( SuperOne SuperTwo )
##########################################

################ Notes ###################
__bases__ is a tuple. The tuple contains classes (not class names) which are direct superclasses for the class.

only classes have this attribute - objects don't.
